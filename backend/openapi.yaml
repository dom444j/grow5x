openapi: 3.0.3
info:
  title: Grow5X API
  description: |
    API del backend de Grow5X - Plataforma de inversión en criptomonedas con sistema de referidos y comisiones.

    ## Autenticación
    La mayoría de endpoints requieren autenticación mediante JWT token en el header Authorization:
    ```
    Authorization: Bearer <jwt_token>
    ```

    ## Roles
    - **USER**: Usuario regular con acceso a funciones básicas
    - **ADMIN**: Administrador con acceso a funciones administrativas

    ## Estados de Entidades
    ### Purchase Status
    - `PENDING_PAYMENT`: Compra pendiente de pago
    - `ACTIVE`: Compra confirmada y activa
    - `CANCELLED`: Compra cancelada

    ### License Status
    - `ACTIVE`: Licencia activa generando beneficios
    - `PAUSED`: Licencia pausada temporalmente
    - `COMPLETED`: Licencia completada (todos los ciclos)
    - `CANCELLED`: Licencia cancelada

    ### Withdrawal Status
    - `PENDING`: Retiro solicitado, pendiente de procesamiento
    - `PROCESSING`: Retiro en proceso
    - `COMPLETED`: Retiro completado exitosamente
    - `REJECTED`: Retiro rechazado

    ## Códigos de Error Comunes
    - `VALIDATION_ERROR`: Error de validación de datos
    - `UNAUTHORIZED`: Token inválido o faltante
    - `FORBIDDEN`: Permisos insuficientes
    - `NOT_FOUND`: Recurso no encontrado
    - `RATE_LIMIT_EXCEEDED`: Límite de requests excedido
    - `INTERNAL_ERROR`: Error interno del servidor
  version: 2.0.0
  contact:
    name: Grow5X Team
    email: support@grow5x.app
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://grow5x.app/api
    description: Servidor de producción
  - url: http://localhost:5000/api
    description: Servidor de desarrollo
paths:
  /api/admin/dashboard/stats:
    get:
      tags:
        - Admin - Dashboard
      summary: Estadísticas del dashboard
      description: Obtiene estadísticas generales para el dashboard admin
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Estadísticas del dashboard
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      stats:
                        type: object
                        properties:
                          purchases:
                            type: object
                            properties:
                              total:
                                type: integer
                                example: 150
                              byStatus:
                                type: object
                                additionalProperties:
                                  type: object
                                  properties:
                                    count:
                                      type: integer
                                    totalAmount:
                                      type: number
                              totalRevenue:
                                type: number
                                example: 75000
                          users:
                            type: object
                            properties:
                              totalUsers:
                                type: integer
                                example: 500
                              activeUsers:
                                type: integer
                                example: 450
                              verifiedUsers:
                                type: integer
                                example: 400
                          commissions:
                            type: object
                            properties:
                              total:
                                type: integer
                                example: 300
                              totalAmount:
                                type: number
                                example: 15000
                          wallets:
                            type: object
                            properties:
                              total:
                                type: integer
                                example: 10
                              byStatus:
                                type: object
                                additionalProperties:
                                  type: integer
  /api/admin/health:
    get:
      tags:
        - Admin - System
      summary: Estado de salud del sistema con semáforo
      description: |
        Obtiene el estado de salud del sistema con lógica de semáforo:
        - **healthy**: Todo funcionando correctamente
        - **degraded**: Errores detectados o ejecuciones tardías (>2h)
        - **down**: Sin ejecuciones en 24h o flags desactivados

        Incluye cache de 10 segundos para evitar sobrecarga.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sistema saludable o degradado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - healthy
                      - degraded
                      - down
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-01-16T15:30:00.000Z'
                  benefits:
                    type: object
                    properties:
                      lastRun:
                        type: string
                        format: date-time
                        nullable: true
                        example: '2025-01-16T03:00:00.000Z'
                      processed:
                        type: integer
                        example: 123
                      errors:
                        type: integer
                        example: 0
                      totalAmount:
                        type: number
                        example: 15375.5
                      status:
                        type: string
                        enum:
                          - success
                          - error
                          - running
                          - unknown
                        example: success
                      errorMessage:
                        type: string
                        nullable: true
                        example: null
                      healthStatus:
                        type: string
                        enum:
                          - healthy
                          - degraded
                          - down
                        example: healthy
                  commissionsUnlock:
                    type: object
                    properties:
                      lastRun:
                        type: string
                        format: date-time
                        nullable: true
                        example: '2025-01-16T03:30:00.000Z'
                      processed:
                        type: integer
                        example: 45
                      errors:
                        type: integer
                        example: 0
                      totalAmount:
                        type: number
                        example: 4500
                      status:
                        type: string
                        enum:
                          - success
                          - error
                          - running
                          - unknown
                        example: success
                      errorMessage:
                        type: string
                        nullable: true
                        example: null
                      healthStatus:
                        type: string
                        enum:
                          - healthy
                          - degraded
                          - down
                        example: healthy
                  database:
                    type: object
                    properties:
                      status:
                        type: string
                        enum:
                          - up
                          - down
                        example: up
                  environment:
                    type: object
                    properties:
                      nodeEnv:
                        type: string
                        example: production
                      timezone:
                        type: string
                        example: UTC
                      version:
                        type: string
                        example: 1.0.0
                      commit:
                        type: string
                        example: abc123def
                      uptimeSec:
                        type: integer
                        example: 86400
                  cronJobs:
                    type: object
                    properties:
                      benefitsEnabled:
                        type: boolean
                        example: true
                      commissionsEnabled:
                        type: boolean
                        example: true
                      schedules:
                        type: object
                        properties:
                          benefits:
                            type: string
                            example: 0 3 * * *
                          commissions:
                            type: string
                            example: 30 3 * * *
                  walletPool:
                    type: object
                    properties:
                      network:
                        type: string
                        example: BEP20
                      currency:
                        type: string
                        example: USDT
                      total:
                        type: integer
                        example: 14
                      available:
                        type: integer
                        example: 13
                      disabled:
                        type: integer
                        example: 1
                      rotation:
                        type: object
                        properties:
                          medianDisplayIntervalMin:
                            type: number
                            nullable: true
                            example: 45.5
                          p90DisplayIntervalMin:
                            type: number
                            nullable: true
                            example: 120
                          skewShownCount90d:
                            type: number
                            nullable: true
                            example: 1.2
                      lastShownAt:
                        type: string
                        format: date-time
                        nullable: true
                        example: '2025-01-16T15:25:00.000Z'
                  withdrawals:
                    type: object
                    properties:
                      pending:
                        type: integer
                        example: 5
                      processing:
                        type: integer
                        example: 2
                      completed24h:
                        type: integer
                        example: 15
                      avgProcessingMinutes7d:
                        type: number
                        nullable: true
                        example: 45.5
                      slaHitRate7d:
                        type: string
                        nullable: true
                        example: 85.5%
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get system health
                  message:
                    type: string
                    example: Database connection failed
        '503':
          description: Sistema caído - flags desactivados o sin ejecuciones en 24h
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - down
                    example: down
                  timestamp:
                    type: string
                    format: date-time
                  benefits:
                    type: object
                    properties:
                      healthStatus:
                        type: string
                        enum:
                          - down
                        example: down
                      lastRun:
                        type: string
                        nullable: true
                        example: null
                      errors:
                        type: integer
                        example: 0
                  commissionsUnlock:
                    type: object
                    properties:
                      healthStatus:
                        type: string
                        enum:
                          - down
                        example: down
                      lastRun:
                        type: string
                        nullable: true
                        example: null
                      errors:
                        type: integer
                        example: 0
                  cronJobs:
                    type: object
                    properties:
                      benefitsEnabled:
                        type: boolean
                        example: false
                      commissionsEnabled:
                        type: boolean
                        example: false
  /api/admin/inject-package:
    post:
      tags:
        - Admin
      summary: Create inject-package
      description: Create inject-package endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/overview:
    get:
      tags:
        - Admin
      summary: Get overview
      description: Get overview endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/packages:
    get:
      tags:
        - Admin - Packages
      summary: Get packages
      description: Get packages endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
    post:
      tags:
        - Admin - Packages
      summary: Create packages
      description: Create packages endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/packages/{id}:
    put:
      tags:
        - Admin - Packages
      summary: Update specific :id
      description: Update specific :id endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
    delete:
      tags:
        - Admin - Packages
      summary: Delete specific :id
      description: Delete specific :id endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '204':
          description: Deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      security:
        - bearerAuth: []
  /api/admin/payments/confirm:
    post:
      tags:
        - Admin
      summary: Confirmar o rechazar pago
      description: Confirma o rechaza un pago pendiente
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - purchaseId
                - action
              properties:
                purchaseId:
                  type: string
                  example: PUR_20240101_001
                action:
                  type: string
                  enum:
                    - confirm
                    - reject
                  example: confirm
                notes:
                  type: string
                  example: Pago verificado en blockchain
      responses:
        '200':
          description: Acción completada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Pago confirmado exitosamente
                  data:
                    type: object
                    properties:
                      purchaseId:
                        type: string
                        example: PUR_20240101_001
                      status:
                        type: string
                        example: confirmed
  /api/admin/payments/pending:
    get:
      tags:
        - Admin
      summary: Obtener pagos pendientes
      description: Lista todos los pagos pendientes de confirmación
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: search
          in: query
          description: Buscar por ID de compra o hash de transacción
          schema:
            type: string
      responses:
        '200':
          description: Lista de pagos pendientes
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      purchases:
                        type: array
                        items:
                          $ref: '#/components/schemas/PendingPurchase'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '403':
          description: Acceso denegado - requiere rol admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/admin/purchases/all:
    get:
      tags:
        - Admin
      summary: Get all
      description: Get all endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/purchases/test:
    get:
      tags:
        - Admin
      summary: Get test
      description: Get test endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/purchases/{id}/approve:
    patch:
      tags:
        - Admin
      summary: Update specific approve
      description: Update specific approve endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/purchases/{id}/mark-paid:
    patch:
      tags:
        - Admin
      summary: Update specific mark-paid
      description: Update specific mark-paid endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/purchases/{id}/reject:
    patch:
      tags:
        - Admin
      summary: Update specific reject
      description: Update specific reject endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/referrals:
    get:
      tags:
        - Admin
      summary: Get referrals
      description: Get referrals endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/referrals/stats:
    get:
      tags:
        - Admin
      summary: Get stats
      description: Get stats endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/reports:
    get:
      tags:
        - Admin
      summary: Get reports
      description: Get reports endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/reports/benefits:
    get:
      tags:
        - Admin
      summary: Get benefits
      description: Get benefits endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/reports/export.csv:
    get:
      tags:
        - Admin
      summary: Get export.csv
      description: Get export.csv endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/reports/referrals:
    get:
      tags:
        - Admin
      summary: Get referrals
      description: Get referrals endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/reports/reports/export:
    get:
      tags:
        - Admin
      summary: Get export
      description: Get export endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/reports/sales:
    get:
      tags:
        - Admin
      summary: Get sales
      description: Get sales endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/reports/withdrawals:
    get:
      tags:
        - Admin - Withdrawals
      summary: Get withdrawals
      description: Get withdrawals endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/roles:
    get:
      tags:
        - Admin
      summary: Get roles
      description: Get roles endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/users:
    get:
      tags:
        - Admin - Users
      summary: Listar usuarios (Admin)
      description: Obtiene la lista de todos los usuarios (solo admin)
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: search
          in: query
          description: Buscar por email, nombre, ID o código de referido
          schema:
            type: string
        - name: status
          in: query
          description: Filtrar por estado
          schema:
            type: string
            enum:
              - active
              - inactive
              - verified
              - unverified
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/AdminUserView'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
  /api/admin/users/special-parents:
    get:
      tags:
        - Admin - Users
      summary: Get special-parents
      description: Get special-parents endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/users/{id}:
    get:
      tags:
        - Admin - Users
      summary: Get specific :id
      description: Get specific :id endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      security:
        - bearerAuth: []
    put:
      tags:
        - Admin - Users
      summary: Update specific :id
      description: Update specific :id endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
    delete:
      tags:
        - Admin - Users
      summary: Delete specific :id
      description: Delete specific :id endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '204':
          description: Deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      security:
        - bearerAuth: []
  /api/admin/users/{id}/activate:
    patch:
      tags:
        - Admin - Users
      summary: Update specific activate
      description: Update specific activate endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/users/{id}/assign-special-parent:
    patch:
      tags:
        - Admin - Users
      summary: Update specific assign-special-parent
      description: Update specific assign-special-parent endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/users/{id}/deactivate:
    patch:
      tags:
        - Admin - Users
      summary: Update specific deactivate
      description: Update specific deactivate endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/users/{id}/manual-activate:
    patch:
      tags:
        - Admin - Users
      summary: Update specific manual-activate
      description: Update specific manual-activate endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/users/{id}/remove-special-parent:
    patch:
      tags:
        - Admin - Users
      summary: Update specific remove-special-parent
      description: Update specific remove-special-parent endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/wallets:
    get:
      tags:
        - Admin
      summary: Get wallets
      description: Get wallets endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
    post:
      tags:
        - Admin
      summary: Create wallets
      description: Create wallets endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/wallets/{id}:
    put:
      tags:
        - Admin
      summary: Update specific :id
      description: Update specific :id endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
    delete:
      tags:
        - Admin
      summary: Delete specific :id
      description: Delete specific :id endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '204':
          description: Deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      security:
        - bearerAuth: []
  /api/admin/wallets/{id}/activate:
    post:
      tags:
        - Admin
      summary: Create specific activate
      description: Create specific activate endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/wallets/{id}/suspend:
    post:
      tags:
        - Admin
      summary: Create specific suspend
      description: Create specific suspend endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/wallets/{id}/transactions:
    get:
      tags:
        - Admin
      summary: Get specific transactions
      description: Get specific transactions endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      security:
        - bearerAuth: []
  /api/admin/withdrawals:
    get:
      tags:
        - Admin - Withdrawals
      summary: Gestionar retiros (Admin)
      description: Obtiene la lista de todos los retiros para gestión (solo admin)
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/withdrawals/approve:
    post:
      tags:
        - Admin - Withdrawals
      summary: Create approve
      description: Create approve endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/withdrawals/complete:
    post:
      tags:
        - Admin - Withdrawals
      summary: Create complete
      description: Create complete endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/withdrawals/export:
    get:
      tags:
        - Admin - Withdrawals
      summary: Get export
      description: Get export endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/withdrawals/export/status:
    get:
      tags:
        - Admin - Withdrawals
      summary: Get status
      description: Get status endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/withdrawals/import:
    post:
      tags:
        - Admin - Withdrawals
      summary: Create import
      description: Create import endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/withdrawals/reject:
    post:
      tags:
        - Admin - Withdrawals
      summary: Create reject
      description: Create reject endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/admin/withdrawals/stats/summary:
    get:
      tags:
        - Admin - Withdrawals
      summary: Get summary
      description: Get summary endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/admin/withdrawals/{id}:
    get:
      tags:
        - Admin - Withdrawals
      summary: Get specific withdrawal
      description: Get details of a specific withdrawal by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Withdrawal identifier
      responses:
        '200':
          description: Withdrawal details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      amount:
                        type: number
                      status:
                        type: string
                      userId:
                        type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/admin/withdrawals/{id}/approve:
    patch:
      tags:
        - Admin - Withdrawals
      summary: Approve withdrawal
      description: Approve a specific withdrawal by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Withdrawal identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Approval data
      responses:
        '200':
          description: Withdrawal approved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/admin/withdrawals/{id}/mark-paid:
    patch:
      tags:
        - Admin - Withdrawals
      summary: Mark withdrawal as paid
      description: Mark a specific withdrawal as paid by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Withdrawal identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Payment confirmation data
      responses:
        '200':
          description: Withdrawal marked as paid successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/admin/withdrawals/{id}/reject:
    patch:
      tags:
        - Admin - Withdrawals
      summary: Reject withdrawal
      description: Reject a specific withdrawal by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Withdrawal identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Rejection data
      responses:
        '200':
          description: Withdrawal rejected successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/admin/withdrawals/{withdrawalId}:
    get:
      tags:
        - Admin - Withdrawals
      summary: Get specific withdrawal
      description: Get details of a specific withdrawal by withdrawalId
      security:
        - bearerAuth: []
      parameters:
        - name: withdrawalId
          in: path
          required: true
          schema:
            type: string
          description: Withdrawal identifier
      responses:
        '200':
          description: Withdrawal details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      amount:
                        type: number
                      status:
                        type: string
                      userId:
                        type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: Iniciar sesión
      description: Autentica un usuario y devuelve un token JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@grow5x.com
                password:
                  type: string
                  minLength: 6
                  example: password123
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            example: 507f1f77bcf86cd799439011
                          email:
                            type: string
                            example: user@grow5x.com
                          role:
                            type: string
                            enum:
                              - user
                              - admin
                            example: user
  /api/auth/logout:
    post:
      tags:
        - Authentication
      summary: Cerrar sesión
      description: Invalida el token JWT actual
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Sesión cerrada exitosamente
  /api/auth/me:
    get:
      tags:
        - Authentication
      summary: Obtener información del usuario actual (alias legacy)
      description: Devuelve la información del usuario autenticado
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Información del usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/auth/register:
    post:
      tags:
        - Authentication
      summary: Registrar nuevo usuario
      description: Crea una nueva cuenta de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - firstName
                - lastName
              properties:
                email:
                  type: string
                  format: email
                  example: newuser@grow5x.com
                password:
                  type: string
                  minLength: 6
                  example: password123
                firstName:
                  type: string
                  example: Juan
                lastName:
                  type: string
                  example: Pérez
                referralCode:
                  type: string
                  example: REF123
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Error de validación o email ya existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/checkout/start:
    post:
      tags:
        - Checkout
      summary: Create start
      description: Create start endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/checkout/{orderId}/confirm:
    post:
      tags:
        - Checkout
      summary: Create specific confirm
      description: Create specific confirm endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
          description: orderId identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/checkout/{orderId}/status:
    get:
      tags:
        - Checkout
      summary: Get specific status
      description: Get specific status endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
          description: orderId identifier
      security:
        - bearerAuth: []
  /api/cron/health:
    get:
      tags:
        - Cron Jobs
      summary: Get health
      description: Get health endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/cron/restart:
    post:
      tags:
        - Cron Jobs
      summary: Create restart
      description: Create restart endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/cron/stats:
    get:
      tags:
        - Cron Jobs
      summary: Get stats
      description: Get stats endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/cron/status:
    get:
      tags:
        - Cron Jobs
      summary: Get status
      description: Get status endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/cron/trigger/all:
    post:
      tags:
        - Cron Jobs
      summary: Create all
      description: Create all endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/cron/trigger/benefits:
    post:
      tags:
        - Cron Jobs
      summary: Create benefits
      description: Create benefits endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/cron/trigger/commissions:
    post:
      tags:
        - Cron Jobs
      summary: Create commissions
      description: Create commissions endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/cron/upcoming-unlocks:
    get:
      tags:
        - Cron Jobs
      summary: Get upcoming-unlocks
      description: Get upcoming-unlocks endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/health:
    get:
      tags:
        - Health
      summary: Health check del servidor
      description: Verifica el estado del servidor y la base de datos
      responses:
        '200':
          description: Servidor funcionando correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  timestamp:
                    type: string
                    format: date-time
                  environment:
                    type: string
                    example: production
                  database:
                    type: object
                    properties:
                      status:
                        type: string
                        example: connected
                  version:
                    type: string
                    example: 1.0.0
  /api/me:
    get:
      tags:
        - User Profile
      summary: Obtener información del usuario actual (endpoint canónico)
      description: Devuelve la información del usuario autenticado
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Información del usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/me/benefits:
    get:
      tags:
        - User Profile
      summary: Get benefits
      description: Get benefits endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/me/commissions:
    get:
      tags:
        - Commissions
      summary: Obtener mis comisiones
      description: Lista las comisiones del usuario
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
        - name: status
          in: query
          schema:
            type: string
            enum:
              - pending
              - unlocked
              - paid
        - name: type
          in: query
          schema:
            type: string
            enum:
              - direct_referral
              - parent_bonus
      responses:
        '200':
          description: Lista de comisiones
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      commissions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Commission'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
                      summary:
                        type: object
                        properties:
                          totalEarned:
                            type: number
                            example: 1500
                          totalPending:
                            type: number
                            example: 300
                          totalUnlocked:
                            type: number
                            example: 1200
  /api/me/otp/request:
    post:
      tags:
        - OTP
      summary: Solicitar código OTP
      description: Genera y envía un código OTP por Telegram
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                purpose:
                  type: string
                  enum:
                    - withdrawal
                  default: withdrawal
      responses:
        '200':
          description: OTP enviado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Código OTP enviado por Telegram
                  data:
                    type: object
                    properties:
                      otpId:
                        type: string
                        example: otp_123456
                      expiresAt:
                        type: string
                        format: date-time
                      remainingAttempts:
                        type: integer
                        example: 3
  /api/me/otp/status:
    get:
      tags:
        - OTP
      summary: Estado del OTP
      description: Verifica el estado actual del OTP
      security:
        - bearerAuth: []
      parameters:
        - name: purpose
          in: query
          schema:
            type: string
            enum:
              - withdrawal
            default: withdrawal
      responses:
        '200':
          description: Estado del OTP
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      hasActiveOtp:
                        type: boolean
                        example: true
                      expiresAt:
                        type: string
                        format: date-time
                      remainingAttempts:
                        type: integer
                        example: 2
  /api/me/profile:
    get:
      tags:
        - User Profile
      summary: Obtener perfil completo
      description: Devuelve información detallada del perfil del usuario
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Perfil del usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/UserProfile'
    put:
      tags:
        - User Profile
      summary: Actualizar perfil
      description: Actualiza la información del perfil del usuario
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  minLength: 2
                  example: Juan
                lastName:
                  type: string
                  minLength: 2
                  example: Pérez
                phone:
                  type: string
                  minLength: 10
                  example: '+1234567890'
                country:
                  type: string
                  minLength: 2
                  example: México
                telegramUsername:
                  type: string
                  minLength: 3
                  example: '@usuario'
      responses:
        '200':
          description: Perfil actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Perfil actualizado exitosamente
                  data:
                    $ref: '#/components/schemas/User'
  /api/me/purchases:
    get:
      tags:
        - User Profile
      summary: Obtener mis compras (endpoint canónico)
      description: Lista las compras del usuario autenticado
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Número de página
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Elementos por página
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
        - name: status
          in: query
          description: Filtrar por estado
          schema:
            type: string
            enum:
              - pending
              - hash_submitted
              - confirmed
              - rejected
      responses:
        '200':
          description: Lista de compras
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      purchases:
                        type: array
                        items:
                          $ref: '#/components/schemas/Purchase'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
    post:
      tags:
        - User Profile
      summary: Create purchases
      description: Create purchases endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/me/purchases/{id}/confirm:
    post:
      tags:
        - User Profile
      summary: Confirm purchase
      description: Confirm a specific purchase by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Purchase identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Purchase confirmation data
      responses:
        '200':
          description: Purchase confirmed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/me/referrals:
    get:
      tags:
        - Referrals
      summary: Get referrals
      description: Get referrals endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/me/referrals/stats:
    get:
      tags:
        - Referrals
      summary: Get stats
      description: Get stats endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/me/settings:
    get:
      tags:
        - User Profile
      summary: Get settings
      description: Get settings endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
    put:
      tags:
        - User Profile
      summary: Update settings
      description: Update settings endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/me/transactions:
    get:
      tags:
        - User Profile
      summary: Obtener historial de transacciones
      description: Lista las transacciones del usuario
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
        - name: type
          in: query
          description: Tipo de transacción
          schema:
            type: string
            enum:
              - purchase
              - commission
              - withdrawal
              - daily_benefit
      responses:
        '200':
          description: Historial de transacciones
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Transaction'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
  /api/me/withdrawals:
    post:
      tags:
        - Withdrawals
      summary: Solicitar retiro
      description: Crea una nueva solicitud de retiro
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - currency
                - destinationAddress
                - network
                - pin
              properties:
                amount:
                  type: number
                  minimum: 50
                  maximum: 10000
                  example: 100
                currency:
                  type: string
                  enum:
                    - USDT
                  example: USDT
                destinationAddress:
                  type: string
                  minLength: 26
                  maxLength: 50
                  example: TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE
                network:
                  type: string
                  enum:
                    - BEP20
                  example: BEP20
                otp:
                  type: string
                  pattern: ^\d{6}$
                  example: '123456'
                  description: Código OTP de 6 dígitos enviado por Telegram
      responses:
        '201':
          description: Solicitud de retiro creada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Solicitud de retiro creada exitosamente
                  data:
                    $ref: '#/components/schemas/Withdrawal'
    get:
      tags:
        - Withdrawals
      summary: Obtener mis retiros
      description: Lista los retiros del usuario
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
        - name: status
          in: query
          schema:
            type: string
            enum:
              - pending
              - approved
              - completed
              - rejected
      responses:
        '200':
          description: Lista de retiros
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      withdrawals:
                        type: array
                        items:
                          $ref: '#/components/schemas/Withdrawal'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
  /api/me/withdrawals/otp:
    post:
      tags:
        - Withdrawals
      summary: Create otp
      description: Create otp endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/me/withdrawals/stats:
    get:
      tags:
        - Withdrawals
      summary: Get stats
      description: Get stats endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/packages:
    get:
      tags:
        - Packages
      summary: Listar paquetes disponibles
      description: Obtiene la lista de paquetes de inversión disponibles
      parameters:
        - name: active
          in: query
          description: Filtrar por paquetes activos
          schema:
            type: string
            enum:
              - 'true'
              - 'false'
            default: 'true'
        - name: visible
          in: query
          description: Filtrar por paquetes visibles
          schema:
            type: string
            enum:
              - 'true'
              - 'false'
            default: 'true'
        - name: sort
          in: query
          description: Ordenar resultados
          schema:
            type: string
            enum:
              - sortOrder
              - price_asc
              - price_desc
              - name
            default: sortOrder
      responses:
        '200':
          description: Lista de paquetes
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      packages:
                        type: array
                        items:
                          $ref: '#/components/schemas/Package'
                      count:
                        type: integer
                        example: 3
  /api/packages/stats/summary:
    get:
      tags:
        - Packages
      summary: Get summary
      description: Get summary endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/packages/{packageId}:
    get:
      tags:
        - Packages
      summary: Obtener detalles de un paquete
      description: Devuelve información detallada de un paquete específico
      parameters:
        - name: packageId
          in: path
          required: true
          description: ID del paquete
          schema:
            type: string
            example: PKG_BASIC_001
      responses:
        '200':
          description: Detalles del paquete
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Package'
        '404':
          description: Paquete no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/packages/{packageId}/commission-calculator:
    get:
      tags:
        - Packages
      summary: Calculadora de comisiones
      description: Calcula las comisiones potenciales para un paquete
      parameters:
        - name: packageId
          in: path
          required: true
          description: ID del paquete
          schema:
            type: string
        - name: quantity
          in: query
          description: Cantidad de paquetes
          schema:
            type: integer
            minimum: 1
            default: 1
      responses:
        '200':
          description: Cálculo de comisiones
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      package:
                        $ref: '#/components/schemas/Package'
                      calculation:
                        type: object
                        properties:
                          quantity:
                            type: integer
                            example: 2
                          totalInvestment:
                            type: number
                            example: 2000
                          commissionBreakdown:
                            type: array
                            items:
                              type: object
                              properties:
                                level:
                                  type: integer
                                  example: 1
                                rate:
                                  type: number
                                  example: 0.1
                                amount:
                                  type: number
                                  example: 200
  /api/payments/confirm-hash:
    post:
      tags:
        - Payments
      summary: Confirmar hash de transacción
      description: Envía el hash de transacción para confirmación
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - purchaseId
                - transactionHash
              properties:
                purchaseId:
                  type: string
                  example: PUR_20240101_001
                transactionHash:
                  type: string
                  example: '0x1234567890abcdef'
      responses:
        '200':
          description: Hash confirmado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Hash de transacción enviado exitosamente
                  data:
                    type: object
                    properties:
                      purchaseId:
                        type: string
                        example: PUR_20240101_001
                      status:
                        type: string
                        example: hash_submitted
  /api/payments/destination:
    post:
      tags:
        - Payments
      summary: Create destination
      description: Create destination endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/payments/my-purchases:
    get:
      tags:
        - Payments
      summary: Obtener mis compras (alias legacy)
      description: Lista las compras del usuario autenticado
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Número de página
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Elementos por página
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
        - name: status
          in: query
          description: Filtrar por estado
          schema:
            type: string
            enum:
              - pending
              - hash_submitted
              - confirmed
              - rejected
      responses:
        '200':
          description: Lista de compras
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      purchases:
                        type: array
                        items:
                          $ref: '#/components/schemas/Purchase'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
  /api/payments/purchase/{purchaseId}:
    get:
      tags:
        - Payments
      summary: Get specific :purchaseId
      description: Get specific :purchaseId endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: purchaseId
          in: path
          required: true
          schema:
            type: string
          description: purchaseId identifier
      security:
        - bearerAuth: []
  /api/payments/submit:
    post:
      tags:
        - Payments
      summary: Enviar solicitud de pago
      description: Crea una nueva solicitud de pago y asigna wallet
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - packageId
                - quantity
              properties:
                packageId:
                  type: string
                  example: PKG_BASIC_001
                quantity:
                  type: integer
                  minimum: 1
                  maximum: 10
                  example: 2
      responses:
        '201':
          description: Solicitud de pago creada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Purchase'
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/public/config:
    get:
      tags:
        - Public
      summary: Configuración pública para el frontend
      description: |
        Retorna configuración pública que el frontend necesita para validaciones y UI:
        - Red y moneda soportadas
        - Límites mínimos y máximos de retiro
        - Objetivos SLA para retiros
        - Disclaimer legal sobre SLA
      responses:
        '200':
          description: Configuración pública obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  network:
                    type: string
                    example: BEP20
                    description: Red blockchain soportada
                  currency:
                    type: string
                    example: USDT
                    description: Moneda soportada
                  withdrawMinUSDTBEP20:
                    type: number
                    example: 10
                    description: Mínimo de retiro en USDT BEP20
                  withdrawMaxUSDTBEP20:
                    type: number
                    example: 10000
                    description: Máximo de retiro en USDT BEP20
                  withdrawSlaTargetsMinutes:
                    type: array
                    items:
                      type: number
                    example:
                      - 15
                      - 30
                      - 60
                      - 180
                      - 360
                      - 720
                      - 1440
                    description: Objetivos SLA en minutos para retiros
                  legal:
                    type: object
                    properties:
                      withdrawSlaDisclaimer:
                        type: string
                        example: >-
                          Los tiempos son un objetivo operativo (SLA). El procesamiento es manual por un administrador y
                          no constituye garantía.
                        description: Disclaimer legal sobre SLA de retiros
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Error interno del servidor
                  code:
                    type: string
                    example: CONFIG_ERROR
  /api/public/packages:
    get:
      tags:
        - Packages
      summary: Get packages
      description: Get packages endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/referrals/validate/{code}:
    get:
      tags:
        - Referrals
      summary: Obtener validate
      description: Obtiene validate
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
          description: code identifier
      security:
        - bearerAuth: []
  /api/special-parent/commissions:
    get:
      tags:
        - Special Parent Reports
      summary: Get commissions
      description: Get commissions endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/special-parent/dashboard:
    get:
      tags:
        - Special Parent Reports
      summary: Get dashboard
      description: Get dashboard endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/special-parent/performance:
    get:
      tags:
        - Special Parent Reports
      summary: Get performance
      description: Get performance endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/special-parent/referrals:
    get:
      tags:
        - Referrals
      summary: Get referrals
      description: Get referrals endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/v1/cohorts:
    get:
      tags:
        - Cohorts
      summary: Get cohorts
      description: Get cohorts endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
    post:
      tags:
        - Cohorts
      summary: Create cohorts
      description: Create cohorts endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/v1/cohorts/{batchId}:
    get:
      tags:
        - Cohorts
      summary: Get specific :batchId
      description: Get specific :batchId endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
          description: batchId identifier
      security:
        - bearerAuth: []
    put:
      tags:
        - Cohorts
      summary: Update specific :batchId
      description: Update specific :batchId endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
          description: batchId identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
    delete:
      tags:
        - Cohorts
      summary: Delete specific :batchId
      description: Delete specific :batchId endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '204':
          description: Deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
          description: batchId identifier
      security:
        - bearerAuth: []
  /api/v1/cohorts/{batchId}/flags:
    post:
      tags:
        - Cohorts
      summary: Create specific flags
      description: Create specific flags endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
          description: batchId identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/v1/iam/init:
    post:
      tags:
        - IAM
      summary: Create init
      description: Create init endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/v1/iam/roles:
    get:
      tags:
        - IAM
      summary: Get roles
      description: Get roles endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
    post:
      tags:
        - IAM
      summary: Create roles
      description: Create roles endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/v1/iam/roles/{name}:
    get:
      tags:
        - IAM
      summary: Get specific :name
      description: Get specific :name endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: name identifier
      security:
        - bearerAuth: []
    put:
      tags:
        - IAM
      summary: Update specific :name
      description: Update specific :name endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: name identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
    delete:
      tags:
        - IAM
      summary: Delete specific :name
      description: Delete specific :name endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '204':
          description: Deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: name identifier
      security:
        - bearerAuth: []
  /api/v1/iam/users/{userId}/role:
    post:
      tags:
        - IAM
      summary: Create specific role
      description: Create specific role endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: userId identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
    get:
      tags:
        - IAM
      summary: Get specific role
      description: Get specific role endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: userId identifier
      security:
        - bearerAuth: []
  /api/v1/users-import/health:
    get:
      tags:
        - User Import
      summary: Get health
      description: Get health endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/v1/users-import/jobs:
    get:
      tags:
        - User Import
      summary: Get jobs
      description: Get jobs endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /api/v1/users-import/upload:
    post:
      tags:
        - User Import
      summary: Create upload
      description: Create upload endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /api/v1/users-import/{id}/report:
    get:
      tags:
        - User Import
      summary: Get import job report
      description: Get the detailed report of a specific import job by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Import job identifier
      responses:
        '200':
          description: Job report retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      totalRecords:
                        type: number
                        example: 1000
                      successfulImports:
                        type: number
                        example: 950
                      errors:
                        type: array
                        items:
                          type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/users-import/{id}/run:
    post:
      tags:
        - User Import
      summary: Run import job
      description: Execute a specific import job by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Import job identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Job execution parameters
      responses:
        '200':
          description: Job started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/users-import/{id}/status:
    get:
      tags:
        - User Import
      summary: Get import job status
      description: Get the status of a specific import job by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Import job identifier
      responses:
        '200':
          description: Job status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        example: running
                      progress:
                        type: number
                        example: 75
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/users-import/{jobId}/report:
    get:
      tags:
        - User Import
      summary: Get import job report
      description: Get the detailed report of a specific import job by jobId
      security:
        - bearerAuth: []
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
          description: Import job identifier
      responses:
        '200':
          description: Job report retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      totalRecords:
                        type: number
                        example: 1000
                      successfulImports:
                        type: number
                        example: 950
                      errors:
                        type: array
                        items:
                          type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/users-import/{jobId}/run:
    post:
      tags:
        - User Import
      summary: Run import job
      description: Execute a specific import job by jobId
      security:
        - bearerAuth: []
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
          description: Import job identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Job execution parameters
      responses:
        '200':
          description: Job started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/users-import/{jobId}/status:
    get:
      tags:
        - User Import
      summary: Get import job status
      description: Get the status of a specific import job by jobId
      security:
        - bearerAuth: []
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
          description: Import job identifier
      responses:
        '200':
          description: Job status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        example: running
                      progress:
                        type: number
                        example: 75
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/webhooks/telegram:
    post:
      tags:
        - Webhooks
      summary: Webhook de Telegram
      description: Recibe actualizaciones del bot de Telegram
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Telegram Update object
      responses:
        '200':
          description: Webhook procesado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '401':
          description: Token de webhook inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/webhooks/telegram/status:
    get:
      tags:
        - Webhooks
      summary: Get status
      description: Get status endpoint
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /r/{code}:
    get:
      tags:
        - Referrals
      summary: Obtener r
      description: Obtiene r
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
          description: code identifier
      security:
        - bearerAuth: []
  /status:
    get:
      tags:
        - API
      summary: Obtener status
      description: Obtiene status
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /trigger:
    post:
      tags:
        - API
      summary: Crear trigger
      description: Crea trigger
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /date/{date}:
    get:
      tags:
        - API
      summary: Obtener date
      description: Obtiene date
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
          description: date identifier
      security:
        - bearerAuth: []
  /cleanup:
    delete:
      tags:
        - API
      summary: Eliminar cleanup
      description: Elimina cleanup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '204':
          description: Deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /control:
    post:
      tags:
        - API
      summary: Crear control
      description: Crea control
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /roles:
    get:
      tags:
        - API
      summary: Obtener roles
      description: Obtiene roles
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
    post:
      tags:
        - API
      summary: Crear roles
      description: Crea roles
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /users/{id}/assign-special-parent:
    patch:
      tags:
        - Admin
      summary: Modificar assign-special-parent
      description: Actualiza parcialmente assign-special-parent
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /users/{id}/remove-special-parent:
    patch:
      tags:
        - Admin
      summary: Modificar remove-special-parent
      description: Actualiza parcialmente remove-special-parent
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /users/special-parents:
    get:
      tags:
        - Admin
      summary: Obtener special-parents
      description: Obtiene special-parents
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /payments/pending:
    get:
      tags:
        - Payments
      summary: Obtener pending
      description: Obtiene pending
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /purchases/test:
    get:
      tags:
        - Admin
      summary: Obtener test
      description: Obtiene test
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /purchases/all:
    get:
      tags:
        - Admin
      summary: Obtener all
      description: Obtiene all
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /payments/confirm:
    post:
      tags:
        - Payments
      summary: Crear confirm
      description: Crea confirm
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /purchases/{id}/approve:
    patch:
      tags:
        - Admin
      summary: Modificar approve
      description: Actualiza parcialmente approve
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /purchases/{id}/reject:
    patch:
      tags:
        - Admin
      summary: Modificar reject
      description: Actualiza parcialmente reject
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /purchases/{id}/mark-paid:
    patch:
      tags:
        - Admin
      summary: Modificar mark-paid
      description: Actualiza parcialmente mark-paid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /overview:
    get:
      tags:
        - Admin
      summary: Obtener overview
      description: Obtiene overview
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /dashboard/stats:
    get:
      tags:
        - Admin
      summary: Obtener stats
      description: Obtiene stats
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /users:
    get:
      tags:
        - Admin
      summary: Obtener users
      description: Obtiene users
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /users/{id}:
    get:
      tags:
        - Admin
      summary: Obtener users
      description: Obtiene users
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      security:
        - bearerAuth: []
    put:
      tags:
        - Admin
      summary: Actualizar users
      description: Actualiza completamente users
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
    delete:
      tags:
        - Admin
      summary: Eliminar users
      description: Elimina users
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '204':
          description: Deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      security:
        - bearerAuth: []
  /users/{id}/activate:
    patch:
      tags:
        - Admin
      summary: Modificar activate
      description: Actualiza parcialmente activate
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /users/{id}/deactivate:
    patch:
      tags:
        - Admin
      summary: Modificar deactivate
      description: Actualiza parcialmente deactivate
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /users/{id}/manual-activate:
    patch:
      tags:
        - Admin
      summary: Modificar manual-activate
      description: Actualiza parcialmente manual-activate
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /health:
    get:
      tags:
        - User
      summary: Obtener health
      description: Obtiene health
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /referrals:
    get:
      tags:
        - Referrals
      summary: Obtener referrals
      description: Obtiene referrals
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /referrals/stats:
    get:
      tags:
        - Referrals
      summary: Obtener stats
      description: Obtiene stats
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /packages:
    get:
      tags:
        - Packages
      summary: Obtener packages
      description: Obtiene packages
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Packages
      summary: Crear packages
      description: Crea packages
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /packages/{id}:
    put:
      tags:
        - Packages
      summary: Actualizar packages
      description: Actualiza completamente packages
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
    delete:
      tags:
        - Packages
      summary: Eliminar packages
      description: Elimina packages
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '204':
          description: Deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      security:
        - bearerAuth: []
  /inject-package:
    post:
      tags:
        - Admin
      summary: Crear inject-package
      description: Crea inject-package
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /wallets:
    get:
      tags:
        - Admin
      summary: Obtener wallets
      description: Obtiene wallets
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
    post:
      tags:
        - Admin
      summary: Crear wallets
      description: Crea wallets
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /wallets/{id}:
    put:
      tags:
        - Admin
      summary: Actualizar wallets
      description: Actualiza completamente wallets
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
    delete:
      tags:
        - Admin
      summary: Eliminar wallets
      description: Elimina wallets
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '204':
          description: Deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      security:
        - bearerAuth: []
  /wallets/{id}/suspend:
    post:
      tags:
        - Admin
      summary: Crear suspend
      description: Crea suspend
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /wallets/{id}/activate:
    post:
      tags:
        - Admin
      summary: Crear activate
      description: Crea activate
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /wallets/{id}/transactions:
    get:
      tags:
        - Admin
      summary: Obtener transactions
      description: Obtiene transactions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      security:
        - bearerAuth: []
  /:
    get:
      tags:
        - Withdrawals
      summary: Obtener undefined
      description: Obtiene undefined
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
    post:
      tags:
        - API
      summary: Crear undefined
      description: Crea undefined
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /reports/export:
    get:
      tags:
        - Admin
      summary: Obtener export
      description: Obtiene export
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /sales:
    get:
      tags:
        - Admin
      summary: Obtener sales
      description: Obtiene sales
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /benefits:
    get:
      tags:
        - User
      summary: Obtener benefits
      description: Obtiene benefits
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /withdrawals:
    get:
      tags:
        - Withdrawals
      summary: Obtener withdrawals
      description: Obtiene withdrawals
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
    post:
      tags:
        - Withdrawals
      summary: Crear withdrawals
      description: Crea withdrawals
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /export.csv:
    get:
      tags:
        - Admin
      summary: Obtener export.csv
      description: Obtiene export.csv
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /register:
    post:
      tags:
        - Authentication
      summary: Crear register
      description: Crea register
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /login:
    post:
      tags:
        - Authentication
      summary: Crear login
      description: Crea login
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /me:
    get:
      tags:
        - Authentication
      summary: Obtener me
      description: Obtiene me
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /logout:
    post:
      tags:
        - Authentication
      summary: Crear logout
      description: Crea logout
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /forgot-password:
    post:
      tags:
        - Authentication
      summary: Crear forgot-password
      description: Crea forgot-password
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /reset-password:
    post:
      tags:
        - Authentication
      summary: Crear reset-password
      description: Crea reset-password
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /start:
    post:
      tags:
        - API
      summary: Crear start
      description: Crea start
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /{orderId}/confirm:
    post:
      tags:
        - API
      summary: Crear confirm
      description: Crea confirm
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
          description: orderId identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /{orderId}/status:
    get:
      tags:
        - API
      summary: Obtener status
      description: Obtiene status
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
          description: orderId identifier
      security:
        - bearerAuth: []
  /{batchId}:
    get:
      tags:
        - API
      summary: Obtener undefined
      description: Obtiene undefined
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
          description: batchId identifier
      security:
        - bearerAuth: []
    put:
      tags:
        - API
      summary: Actualizar undefined
      description: Actualiza completamente undefined
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
          description: batchId identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
    delete:
      tags:
        - API
      summary: Eliminar undefined
      description: Elimina undefined
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '204':
          description: Deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
          description: batchId identifier
      security:
        - bearerAuth: []
  /{batchId}/flags:
    post:
      tags:
        - API
      summary: Crear flags
      description: Crea flags
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
          description: batchId identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /stats:
    get:
      tags:
        - API
      summary: Obtener stats
      description: Obtiene stats
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /trigger/all:
    post:
      tags:
        - API
      summary: Crear all
      description: Crea all
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /trigger/benefits:
    post:
      tags:
        - API
      summary: Crear benefits
      description: Crea benefits
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /trigger/commissions:
    post:
      tags:
        - API
      summary: Crear commissions
      description: Crea commissions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /upcoming-unlocks:
    get:
      tags:
        - API
      summary: Obtener upcoming-unlocks
      description: Obtiene upcoming-unlocks
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /restart:
    post:
      tags:
        - API
      summary: Crear restart
      description: Crea restart
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /roles/{name}:
    get:
      tags:
        - API
      summary: Obtener roles
      description: Obtiene roles
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: name identifier
      security:
        - bearerAuth: []
    put:
      tags:
        - API
      summary: Actualizar roles
      description: Actualiza completamente roles
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: name identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
    delete:
      tags:
        - API
      summary: Eliminar roles
      description: Elimina roles
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '204':
          description: Deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: name identifier
      security:
        - bearerAuth: []
  /users/{userId}/role:
    post:
      tags:
        - API
      summary: Crear role
      description: Crea role
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: userId identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
    get:
      tags:
        - API
      summary: Obtener role
      description: Obtiene role
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: userId identifier
      security:
        - bearerAuth: []
  /init:
    post:
      tags:
        - API
      summary: Crear init
      description: Crea init
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /{packageId}:
    get:
      tags:
        - Packages
      summary: Obtener undefined
      description: Obtiene undefined
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: packageId
          in: path
          required: true
          schema:
            type: string
          description: packageId identifier
      security:
        - bearerAuth: []
  /{packageId}/commission-calculator:
    get:
      tags:
        - Packages
      summary: Obtener commission-calculator
      description: Obtiene commission-calculator
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: packageId
          in: path
          required: true
          schema:
            type: string
          description: packageId identifier
      security:
        - bearerAuth: []
  /stats/summary:
    get:
      tags:
        - Withdrawals
      summary: Obtener summary
      description: Obtiene summary
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /destination:
    post:
      tags:
        - Payments
      summary: Crear destination
      description: Crea destination
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /submit:
    post:
      tags:
        - Payments
      summary: Crear submit
      description: Crea submit
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /confirm-hash:
    post:
      tags:
        - Payments
      summary: Crear confirm-hash
      description: Crea confirm-hash
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /my-purchases:
    get:
      tags:
        - Payments
      summary: Obtener my-purchases
      description: Obtiene my-purchases
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /purchase/{purchaseId}:
    get:
      tags:
        - Payments
      summary: Obtener purchase
      description: Obtiene purchase
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: purchaseId
          in: path
          required: true
          schema:
            type: string
          description: purchaseId identifier
      security:
        - bearerAuth: []
  /config:
    get:
      tags:
        - API
      summary: Obtener config
      description: Obtiene config
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /dashboard:
    get:
      tags:
        - API
      summary: Obtener dashboard
      description: Obtiene dashboard
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /commissions:
    get:
      tags:
        - User
      summary: Obtener commissions
      description: Obtiene commissions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /performance:
    get:
      tags:
        - API
      summary: Obtener performance
      description: Obtiene performance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /profile:
    get:
      tags:
        - User
      summary: Obtener profile
      description: Obtiene profile
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
    put:
      tags:
        - User
      summary: Actualizar profile
      description: Actualiza completamente profile
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /settings:
    get:
      tags:
        - User
      summary: Obtener settings
      description: Obtiene settings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
    put:
      tags:
        - User
      summary: Actualizar settings
      description: Actualiza completamente settings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /transactions:
    get:
      tags:
        - User
      summary: Obtener transactions
      description: Obtiene transactions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /otp/request:
    post:
      tags:
        - User
      summary: Crear request
      description: Crea request
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /otp/status:
    get:
      tags:
        - User
      summary: Obtener status
      description: Obtiene status
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /withdrawals/otp:
    post:
      tags:
        - Withdrawals
      summary: Crear otp
      description: Crea otp
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /withdrawals/stats:
    get:
      tags:
        - Withdrawals
      summary: Obtener stats
      description: Obtiene stats
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /purchases:
    post:
      tags:
        - User
      summary: Crear purchases
      description: Crea purchases
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
    get:
      tags:
        - User
      summary: Obtener purchases
      description: Obtiene purchases
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /purchases/{id}/confirm:
    post:
      tags:
        - User
      summary: Crear confirm
      description: Crea confirm
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /upload:
    post:
      tags:
        - User
      summary: Crear upload
      description: Crea upload
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /{jobId}/run:
    post:
      tags:
        - User
      summary: Crear run
      description: Crea run
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
          description: jobId identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /{jobId}/status:
    get:
      tags:
        - User
      summary: Obtener status
      description: Obtiene status
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
          description: jobId identifier
      security:
        - bearerAuth: []
  /{jobId}/report:
    get:
      tags:
        - User
      summary: Obtener report
      description: Obtiene report
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
          description: jobId identifier
      security:
        - bearerAuth: []
  /jobs:
    get:
      tags:
        - User
      summary: Obtener jobs
      description: Obtiene jobs
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /telegram:
    post:
      tags:
        - API
      summary: Crear telegram
      description: Crea telegram
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /telegram/status:
    get:
      tags:
        - API
      summary: Obtener status
      description: Obtiene status
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /export:
    get:
      tags:
        - Withdrawals
      summary: Obtener export
      description: Obtiene export
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /import:
    post:
      tags:
        - Withdrawals
      summary: Crear import
      description: Crea import
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /export/status:
    get:
      tags:
        - Withdrawals
      summary: Obtener status
      description: Obtiene status
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
  /{withdrawalId}:
    get:
      tags:
        - Withdrawals
      summary: Obtener undefined
      description: Obtiene undefined
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: withdrawalId
          in: path
          required: true
          schema:
            type: string
          description: withdrawalId identifier
      security:
        - bearerAuth: []
  /approve:
    post:
      tags:
        - Withdrawals
      summary: Crear approve
      description: Crea approve
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /reject:
    post:
      tags:
        - Withdrawals
      summary: Crear reject
      description: Crea reject
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /complete:
    post:
      tags:
        - Withdrawals
      summary: Crear complete
      description: Crea complete
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /{id}/approve:
    patch:
      tags:
        - Withdrawals
      summary: Modificar approve
      description: Actualiza parcialmente approve
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /{id}/reject:
    patch:
      tags:
        - Withdrawals
      summary: Modificar reject
      description: Actualiza parcialmente reject
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
  /{id}/mark-paid:
    patch:
      tags:
        - Withdrawals
      summary: Modificar mark-paid
      description: Actualiza parcialmente mark-paid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Response data
        '201':
          description: Created/Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request payload
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT token obtenido del endpoint de login.
        Formato: `Bearer <token>`
  schemas:
    User:
      type: object
      properties:
        userId:
          type: string
          example: USR_20240101_001
        email:
          type: string
          format: email
          example: usuario@ejemplo.com
        firstName:
          type: string
          example: Juan
        lastName:
          type: string
          example: Pérez
        phone:
          type: string
          example: '+1234567890'
        country:
          type: string
          example: México
        role:
          type: string
          enum:
            - user
            - admin
          example: user
        referralCode:
          type: string
          example: REF123456
        isActive:
          type: boolean
          example: true
        isVerified:
          type: boolean
          example: true
        balances:
          type: object
          properties:
            available:
              type: number
              example: 1500.5
            pending:
              type: number
              example: 200
            total:
              type: number
              example: 1700.5
        referralStats:
          type: object
          properties:
            directReferrals:
              type: integer
              example: 5
            totalReferrals:
              type: integer
              example: 15
            totalCommissions:
              type: number
              example: 750
        lastLoginAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
    UserProfile:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            referredBy:
              type: object
              nullable: true
              properties:
                userId:
                  type: string
                  example: USR_20240101_002
                email:
                  type: string
                  example: referidor@ejemplo.com
                fullName:
                  type: string
                  example: María García
            statistics:
              type: object
              properties:
                totalPurchases:
                  type: integer
                  example: 3
                totalInvested:
                  type: number
                  example: 3000
                totalEarned:
                  type: number
                  example: 450
                activePackages:
                  type: integer
                  example: 2
    Package:
      type: object
      properties:
        packageId:
          type: string
          example: PKG_BASIC_001
        name:
          type: string
          example: Paquete Básico
        price:
          type: number
          example: 1000
        currency:
          type: string
          example: USDT
        dailyBenefitRate:
          type: number
          example: 0.015
        dailyBenefitPercentage:
          type: string
          example: '1.5'
        benefitDays:
          type: integer
          example: 30
        totalCycles:
          type: integer
          example: 12
        totalDurationDays:
          type: integer
          example: 360
        totalBenefitAmount:
          type: number
          example: 540
        totalROI:
          type: number
          example: 1.54
        commissionRates:
          type: object
          properties:
            directReferralRate:
              type: number
              example: 0.1
              description: Tasa de comisión por referido directo
            parentBonusRate:
              type: number
              example: 0.1
              description: Tasa de bono por activación de referido
        description:
          type: string
          example: Paquete ideal para principiantes
        features:
          type: array
          items:
            type: string
          example:
            - Beneficios diarios
            - Comisiones por referidos
            - Soporte 24/7
        minPurchase:
          type: integer
          example: 1
        maxPurchase:
          type: integer
          example: 10
        isActive:
          type: boolean
          example: true
        isVisible:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
    Purchase:
      type: object
      properties:
        purchaseId:
          type: string
          example: PUR_20240101_001
        user:
          type: object
          properties:
            userId:
              type: string
              example: USR_20240101_001
            email:
              type: string
              example: usuario@ejemplo.com
        package:
          type: object
          properties:
            packageId:
              type: string
              example: PKG_BASIC_001
            name:
              type: string
              example: Paquete Básico
        quantity:
          type: integer
          example: 2
        unitPrice:
          type: number
          example: 1000
        totalAmount:
          type: number
          example: 2000
        currency:
          type: string
          example: USDT
        status:
          type: string
          enum:
            - pending
            - hash_submitted
            - confirmed
            - rejected
          example: pending
        assignedWallet:
          type: object
          properties:
            address:
              type: string
              example: TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE
            network:
              type: string
              example: TRC20
        transactionHash:
          type: string
          nullable: true
          example: '0x1234567890abcdef'
        paymentDeadline:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        confirmedAt:
          type: string
          format: date-time
          nullable: true
    PendingPurchase:
      allOf:
        - $ref: '#/components/schemas/Purchase'
        - type: object
          properties:
            waitingTime:
              type: integer
              description: Tiempo de espera en minutos
              example: 45
    Withdrawal:
      type: object
      properties:
        id:
          type: string
          description: Canonical withdrawal identifier
          example: WTH_20240101_001
        withdrawalId:
          type: string
          description: Legacy field, same as id
          example: WTH_20240101_001
        user:
          type: object
          properties:
            userId:
              type: string
              example: USR_20240101_001
            email:
              type: string
              example: usuario@ejemplo.com
        amountUSDT:
          type: number
          description: Canonical amount field in USDT
          example: 100
        amount:
          type: number
          description: Legacy field, same as amountUSDT
          example: 100
        currency:
          type: string
          example: USDT
        toAddress:
          type: string
          description: Canonical destination address field
          example: TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE
        destinationAddress:
          type: string
          description: Legacy field, same as toAddress
          example: TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE
        network:
          type: string
          example: TRC20
        status:
          type: string
          description: Status in uppercase
          enum:
            - PENDING
            - APPROVED
            - COMPLETED
            - REJECTED
            - PAID
          example: PENDING
        txId:
          type: string
          description: Canonical transaction ID field
          nullable: true
          example: '0x1234567890abcdef'
        txHash:
          type: string
          description: Legacy field, same as txId
          nullable: true
          example: '0x1234567890abcdef'
        processedByUserId:
          type: string
          description: Canonical field for admin who processed the withdrawal
          nullable: true
          example: USR_20240101_002
        requestedAt:
          type: string
          format: date-time
        approvedAt:
          type: string
          format: date-time
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        rejectedAt:
          type: string
          format: date-time
          nullable: true
        adminNotes:
          type: string
          nullable: true
          example: Retiro procesado exitosamente
    Commission:
      type: object
      properties:
        commissionId:
          type: string
          example: COM_20240101_001
        earner:
          type: object
          properties:
            userId:
              type: string
              example: USR_20240101_001
            email:
              type: string
              example: usuario@ejemplo.com
        source:
          type: object
          properties:
            userId:
              type: string
              example: USR_20240101_002
            email:
              type: string
              example: referido@ejemplo.com
        purchase:
          type: object
          properties:
            purchaseId:
              type: string
              example: PUR_20240101_001
            packageName:
              type: string
              example: Paquete Básico
        commissionAmount:
          type: number
          example: 100
        commissionRate:
          type: number
          example: 0.1
        level:
          type: integer
          example: 1
        type:
          type: string
          enum:
            - referral
            - binary
          example: referral
        status:
          type: string
          enum:
            - pending
            - unlocked
            - paid
          example: unlocked
        unlockDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        paidAt:
          type: string
          format: date-time
          nullable: true
    Transaction:
      type: object
      properties:
        transactionId:
          type: string
          example: TXN_20240101_001
        user:
          type: object
          properties:
            userId:
              type: string
              example: USR_20240101_001
        type:
          type: string
          enum:
            - purchase
            - commission
            - withdrawal
            - daily_benefit
          example: commission
        amount:
          type: number
          example: 100
        currency:
          type: string
          example: USDT
        status:
          type: string
          enum:
            - pending
            - completed
            - failed
          example: completed
        description:
          type: string
          example: Comisión por referido nivel 1
        reference:
          type: object
          properties:
            type:
              type: string
              example: commission
            id:
              type: string
              example: COM_20240101_001
        createdAt:
          type: string
          format: date-time
        processedAt:
          type: string
          format: date-time
          nullable: true
    AdminUserView:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            referredBy:
              type: object
              nullable: true
              properties:
                userId:
                  type: string
                  example: USR_20240101_002
                email:
                  type: string
                  example: referidor@ejemplo.com
                fullName:
                  type: string
                  example: María García
    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Login exitoso
        data:
          type: object
          properties:
            token:
              type: string
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            user:
              $ref: '#/components/schemas/User'
            expiresIn:
              type: string
              example: 24h
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Error de validación
        code:
          type: string
          example: VALIDATION_ERROR
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                example: email
              message:
                type: string
                example: Email inválido
    Pagination:
      type: object
      properties:
        currentPage:
          type: integer
          example: 1
        totalPages:
          type: integer
          example: 5
        totalCount:
          type: integer
          example: 100
        hasNext:
          type: boolean
          example: true
        hasPrev:
          type: boolean
          example: false
    Role:
      type: object
      properties:
        _id:
          type: string
          example: 60f7b3b3b3b3b3b3b3b3b3b3
        name:
          type: string
          example: admin
          description: Nombre único del rol
        displayName:
          type: string
          example: Administrador
          description: Nombre para mostrar
        description:
          type: string
          example: Acceso completo al sistema
          description: Descripción del rol
        permissions:
          type: array
          items:
            type: object
            properties:
              resource:
                type: string
                example: users
                description: Recurso sobre el que se aplica el permiso
              actions:
                type: array
                items:
                  type: string
                example:
                  - read
                  - write
                  - delete
                description: Acciones permitidas sobre el recurso
        isActive:
          type: boolean
          example: true
          description: Si el rol está activo
        isSystem:
          type: boolean
          example: true
          description: Si es un rol del sistema (no se puede eliminar)
        createdBy:
          type: string
          example: 60f7b3b3b3b3b3b3b3b3b3b3
          description: ID del usuario que creó el rol
        updatedBy:
          type: string
          example: 60f7b3b3b3b3b3b3b3b3b3b3
          description: ID del usuario que actualizó el rol
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
  /api/v1/users-import/upload:
    post:
      tags:
        - User Import
      summary: Subir archivo para importación de usuarios
      description: |
        Sube un archivo CSV o JSON con datos de usuarios para importación masiva.
        Solo administradores pueden usar este endpoint.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - cohort
              properties:
                file:
                  type: string
                  format: binary
                  description: Archivo CSV o JSON con datos de usuarios
                cohort:
                  type: string
                  example: batch-2025-08-A
                  description: Identificador de la cohorte
                requireReferralCode:
                  type: boolean
                  default: false
                  description: Si es requerido el código de referido
                allowDuplicateEmails:
                  type: boolean
                  default: false
                  description: Si se permiten emails duplicados
                defaultRole:
                  type: string
                  default: user
                  description: Rol por defecto para usuarios importados
                sendWelcomeEmail:
                  type: boolean
                  default: false
                  description: Si enviar email de bienvenida
                autoActivate:
                  type: boolean
                  default: true
                  description: Si activar automáticamente las cuentas
      responses:
        '201':
          description: Archivo subido y trabajo de importación creado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      jobId:
                        type: string
                        example: import_20250816_001
                      status:
                        type: string
                        example: queued
                      totalRows:
                        type: integer
                        example: 1500
                      cohort:
                        type: string
                        example: batch-2025-08-A
                  message:
                    type: string
                    example: Archivo subido exitosamente
        '400':
          $ref: '#/components/responses/ValidationError'
        '413':
          description: Archivo demasiado grande
        '415':
          description: Tipo de archivo no soportado
  /api/v1/users-import/{jobId}/run:
    post:
      tags:
        - User Import
      summary: Iniciar procesamiento de importación
      description: >-
        Inicia el procesamiento de un trabajo de importación previamente subido. Por defecto ejecuta en modo dry-run
        (validación sin crear usuarios)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
          description: ID del trabajo de importación
      requestBody:
        description: Configuración de ejecución
        content:
          application/json:
            schema:
              type: object
              properties:
                dryRun:
                  type: boolean
                  default: true
                  description: Ejecutar en modo dry-run (solo validación)
                commit:
                  type: boolean
                  default: false
                  description: Ejecutar en modo commit (crear usuarios reales)
              example:
                dryRun: true
                commit: false
      responses:
        '200':
          description: Procesamiento iniciado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      jobId:
                        type: string
                        example: import_20250816_001
                      status:
                        type: string
                        example: running
                      executionMode:
                        type: string
                        enum:
                          - dry-run
                          - commit
                        example: dry-run
                      isDryRun:
                        type: boolean
                        example: true
                      startedAt:
                        type: string
                        format: date-time
                  message:
                    type: string
                    example: Procesamiento iniciado en modo dry-run
        '404':
          description: Trabajo no encontrado
        '409':
          description: El trabajo ya está en procesamiento
  /api/v1/users-import/{jobId}/status:
    get:
      tags:
        - User Import
      summary: Obtener estado de importación
      description: Obtiene el estado actual de un trabajo de importación
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
          description: ID del trabajo de importación
      responses:
        '200':
          description: Estado obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      jobId:
                        type: string
                        example: import_20250816_001
                      status:
                        type: string
                        enum:
                          - queued
                          - running
                          - completed
                          - failed
                          - partial
                        example: running
                      cohort:
                        type: string
                        example: batch-2025-08-A
                      progress:
                        type: number
                        example: 65.5
                        description: Porcentaje de progreso (0-100)
                      totalRows:
                        type: integer
                        example: 1500
                      validRows:
                        type: integer
                        example: 1450
                      invalidRows:
                        type: integer
                        example: 50
                      importedRows:
                        type: integer
                        example: 980
                      skippedRows:
                        type: integer
                        example: 20
                      startedAt:
                        type: string
                        format: date-time
                      finishedAt:
                        type: string
                        format: date-time
                        nullable: true
                      errors:
                        type: array
                        items:
                          type: string
        '404':
          description: Trabajo no encontrado
  /api/v1/users-import/{jobId}/report:
    get:
      tags:
        - User Import
      summary: Generar reporte de importación
      description: Genera un reporte detallado del trabajo de importación
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
          description: ID del trabajo de importación
        - in: query
          name: format
          schema:
            type: string
            enum:
              - json
              - csv
            default: json
          description: Formato del reporte
        - in: query
          name: includeErrors
          schema:
            type: boolean
            default: true
          description: Si incluir filas con errores
      responses:
        '200':
          description: Reporte generado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      summary:
                        type: object
                        properties:
                          jobId:
                            type: string
                          status:
                            type: string
                          totalRows:
                            type: integer
                          validRows:
                            type: integer
                          invalidRows:
                            type: integer
                          importedRows:
                            type: integer
                          skippedRows:
                            type: integer
                          duration:
                            type: number
                            description: Duración en minutos
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            rowIndex:
                              type: integer
                            email:
                              type: string
                            errors:
                              type: array
                              items:
                                type: string
            text/csv:
              schema:
                type: string
                description: Reporte en formato CSV
        '404':
          description: Trabajo no encontrado
  /api/v1/users-import/jobs:
    get:
      tags:
        - User Import
      summary: Listar trabajos de importación
      description: Obtiene una lista paginada de trabajos de importación
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Número de página
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
            maximum: 100
          description: Elementos por página
        - in: query
          name: status
          schema:
            type: string
            enum:
              - queued
              - running
              - completed
              - failed
              - partial
          description: Filtrar por estado
        - in: query
          name: cohort
          schema:
            type: string
          description: Filtrar por cohorte
      responses:
        '200':
          description: Lista obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        jobId:
                          type: string
                        status:
                          type: string
                        cohort:
                          type: string
                        totalRows:
                          type: integer
                        validRows:
                          type: integer
                        invalidRows:
                          type: integer
                        importedRows:
                          type: integer
                        createdAt:
                          type: string
                          format: date-time
                        finishedAt:
                          type: string
                          format: date-time
                          nullable: true
                  pagination:
                    $ref: '#/components/schemas/Pagination'
  /api/v1/users-import/health:
    get:
      tags:
        - User Import
      summary: Estado del sistema de importación
      description: Verifica el estado del sistema de importación de usuarios
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Estado obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                        example: true
                      runningJobs:
                        type: integer
                        example: 2
                      queuedJobs:
                        type: integer
                        example: 0
                      lastJob:
                        type: object
                        properties:
                          status:
                            type: string
                          duration:
                            type: number
                          rowsProcessed:
                            type: integer
                          finishedAt:
                            type: string
                            format: date-time
  /api/v1/iam/roles:
    get:
      tags:
        - IAM
      summary: Obtener lista de roles
      description: Obtiene una lista de todos los roles disponibles en el sistema
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: includeSystem
          schema:
            type: boolean
            default: false
          description: Si incluir roles del sistema
        - in: query
          name: isActive
          schema:
            type: boolean
          description: Filtrar por estado activo
      responses:
        '200':
          description: Lista de roles obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
    post:
      tags:
        - IAM
      summary: Crear nuevo rol
      description: Crea un nuevo rol en el sistema
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - displayName
                - permissions
              properties:
                name:
                  type: string
                  example: content_manager
                  description: Nombre único del rol
                displayName:
                  type: string
                  example: Gestor de Contenido
                  description: Nombre para mostrar
                description:
                  type: string
                  example: Puede gestionar contenido del sistema
                  description: Descripción del rol
                permissions:
                  type: array
                  items:
                    type: object
                    properties:
                      resource:
                        type: string
                        example: content
                      actions:
                        type: array
                        items:
                          type: string
                        example:
                          - read
                          - write
                          - delete
                isActive:
                  type: boolean
                  default: true
                  description: Si el rol está activo
      responses:
        '201':
          description: Rol creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Role'
                  message:
                    type: string
                    example: Rol creado exitosamente
        '400':
          $ref: '#/components/responses/ValidationError'
        '409':
          description: El rol ya existe
  /api/v1/iam/roles/{roleName}:
    get:
      tags:
        - IAM
      summary: Obtener rol por nombre
      description: Obtiene un rol específico por su nombre
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roleName
          required: true
          schema:
            type: string
          description: Nombre del rol
      responses:
        '200':
          description: Rol obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Role'
        '404':
          description: Rol no encontrado
    put:
      tags:
        - IAM
      summary: Actualizar rol
      description: Actualiza un rol existente
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roleName
          required: true
          schema:
            type: string
          description: Nombre del rol
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                  example: Gestor de Contenido Avanzado
                description:
                  type: string
                  example: Puede gestionar todo el contenido del sistema
                permissions:
                  type: array
                  items:
                    type: object
                    properties:
                      resource:
                        type: string
                      actions:
                        type: array
                        items:
                          type: string
                isActive:
                  type: boolean
      responses:
        '200':
          description: Rol actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Role'
                  message:
                    type: string
                    example: Rol actualizado exitosamente
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          description: Rol no encontrado
    delete:
      tags:
        - IAM
      summary: Eliminar rol
      description: Elimina un rol del sistema (solo roles no del sistema)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roleName
          required: true
          schema:
            type: string
          description: Nombre del rol
      responses:
        '200':
          description: Rol eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Rol eliminado exitosamente
        '400':
          description: No se puede eliminar rol del sistema
        '404':
          description: Rol no encontrado
  /api/v1/iam/users/{userId}/role:
    get:
      tags:
        - IAM
      summary: Obtener rol de usuario
      description: Obtiene el rol asignado a un usuario específico
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Rol de usuario obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                        example: 60f7b3b3b3b3b3b3b3b3b3b3
                      role:
                        $ref: '#/components/schemas/Role'
        '404':
          description: Usuario no encontrado
    post:
      tags:
        - IAM
      summary: Asignar rol a usuario
      description: Asigna un rol específico a un usuario
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - roleName
              properties:
                roleName:
                  type: string
                  example: admin
                  description: Nombre del rol a asignar
      responses:
        '200':
          description: Rol asignado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                      roleName:
                        type: string
                      assignedAt:
                        type: string
                        format: date-time
                  message:
                    type: string
                    example: Rol asignado exitosamente
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          description: Usuario o rol no encontrado
  /api/v1/iam/initialize:
    post:
      tags:
        - IAM
      summary: Inicializar roles por defecto
      description: Crea los roles por defecto del sistema si no existen
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Roles inicializados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      created:
                        type: array
                        items:
                          type: string
                        example:
                          - admin
                          - user
                          - support
                      existing:
                        type: array
                        items:
                          type: string
                        example: []
                  message:
                    type: string
                    example: Roles por defecto inicializados
    ReportsSalesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            totalSales:
              type: number
              example: 15000.5
            totalTransactions:
              type: integer
              example: 42
            packageBreakdown:
              type: array
              items:
                type: object
                properties:
                  packageId:
                    type: string
                  packageName:
                    type: string
                  sales:
                    type: number
                  transactions:
                    type: integer
            cohortData:
              type: object
              nullable: true
              properties:
                batchId:
                  type: string
                name:
                  type: string
                sales:
                  type: number
                transactions:
                  type: integer
        message:
          type: string
          example: Reporte de ventas generado
    ReportsReferralsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            directReferrals:
              type: object
              properties:
                pending:
                  type: number
                  example: 1250
                released:
                  type: number
                  example: 3750
                total:
                  type: number
                  example: 5000
            parentBonuses:
              type: object
              properties:
                pending:
                  type: number
                  example: 850
                released:
                  type: number
                  example: 2150
                total:
                  type: number
                  example: 3000
            grandTotal:
              type: number
              example: 8000
        message:
          type: string
          example: Reporte de referidos generado
    ReportsBenefitsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            todayGenerated:
              type: number
              example: 1250.75
            rangeGenerated:
              type: number
              example: 15000.5
            totalBeneficiaries:
              type: integer
              example: 125
            activeBenefitSchedules:
              type: integer
              example: 98
        message:
          type: string
          example: Reporte de beneficios generado
    ReportsWithdrawalsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            statusBreakdown:
              type: object
              properties:
                pending:
                  type: object
                  properties:
                    count:
                      type: integer
                    amount:
                      type: number
                approved:
                  type: object
                  properties:
                    count:
                      type: integer
                    amount:
                      type: number
                rejected:
                  type: object
                  properties:
                    count:
                      type: integer
                    amount:
                      type: number
                completed:
                  type: object
                  properties:
                    count:
                      type: integer
                    amount:
                      type: number
            slaMetrics:
              type: object
              properties:
                avgProcessingMinutes:
                  type: number
                  nullable: true
                  example: 145.5
                slaHitRate:
                  type: number
                  nullable: true
                  example: 0.85
                totalInRange:
                  type: integer
                  example: 67
        message:
          type: string
          example: Reporte de retiros generado
    AdminAction:
      type: object
      properties:
        actionId:
          type: string
          example: ACT_20240101_001
        adminId:
          type: string
          example: USR_20240101_001
        action:
          type: string
          enum:
            - payment_confirm
            - payment_reject
            - withdrawal_approve
            - withdrawal_reject
            - user_activate
            - user_deactivate
            - role_assign
            - role_revoke
            - system_config
          example: payment_confirm
        targetType:
          type: string
          enum:
            - purchase
            - withdrawal
            - user
            - system
          example: purchase
        targetId:
          type: string
          example: PUR_20240101_001
        originalState:
          type: object
          description: Estado original del objeto antes de la acción
        newState:
          type: object
          description: Estado nuevo del objeto después de la acción
        metadata:
          type: object
          properties:
            notes:
              type: string
            ipAddress:
              type: string
            userAgent:
              type: string
            reason:
              type: string
        timestamp:
          type: string
          format: date-time
          example: '2024-01-01T12:00:00Z'
        success:
          type: boolean
          example: true
        errorMessage:
          type: string
          nullable: true
  /api/admin/reports/sales:
    get:
      summary: Reporte de ventas por rango y cohorte
      description: Totales y desglose por paquete; solo admin.
      tags:
        - Admin - Reports
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date-time
          required: true
          description: Inicio de rango (ISO 8601)
        - in: query
          name: to
          schema:
            type: string
            format: date-time
          required: true
          description: Fin de rango (ISO 8601)
        - in: query
          name: cohort
          schema:
            type: string
          required: false
          description: ID de cohorte (opcional)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsSalesResponse'
  /api/admin/reports/referrals:
    get:
      summary: Reporte de referidos (directo 10% y padre global 10%)
      description: Totales pendientes y liberados; solo admin.
      tags:
        - Admin - Reports
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date-time
          required: true
        - in: query
          name: to
          schema:
            type: string
            format: date-time
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsReferralsResponse'
              example:
                success: true
                data:
                  directReferrals:
                    pending: 1250
                    released: 3750
                    total: 5000
                  parentBonuses:
                    pending: 850
                    released: 2150
                    total: 3000
                  grandTotal: 8000
                message: Reporte de referidos generado
  /api/admin/reports/benefits:
    get:
      summary: Reporte de beneficios
      description: Generados hoy y en el rango; solo admin.
      tags:
        - Admin - Reports
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date-time
          required: true
        - in: query
          name: to
          schema:
            type: string
            format: date-time
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsBenefitsResponse'
  /api/admin/reports/withdrawals:
    get:
      summary: Reporte de retiros y SLA
      description: Totales por estado y métricas SLA; solo admin.
      tags:
        - Admin - Reports
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date-time
          required: true
        - in: query
          name: to
          schema:
            type: string
            format: date-time
          required: true
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - approved
              - rejected
              - completed
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsWithdrawalsResponse'
  /api/admin/reports/export.csv:
    get:
      summary: Export CSV enmascarado (por dataset)
      description: Devuelve CSV del dataset solicitado; solo admin + allowlist IP.
      tags:
        - Admin - Reports
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: dataset
          schema:
            type: string
            enum:
              - sales
              - referrals
              - benefits
              - withdrawals
          required: true
        - in: query
          name: from
          schema:
            type: string
            format: date-time
          required: true
        - in: query
          name: to
          schema:
            type: string
            format: date-time
          required: true
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - approved
              - rejected
              - completed
          required: false
        - in: query
          name: cohort
          schema:
            type: string
          required: false
      responses:
        '200':
          description: CSV
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '403':
          description: IP no autorizada para export
tags:
  - name: Admin - Dashboard
    description: Dashboard administrativo (solo admin)
  - name: Admin - Payments
    description: Administración de pagos (solo admin)
  - name: Admin - Reports
    description: Reportes administrativos y auditoría (solo admin)
  - name: Admin - System
    description: Estado de salud del sistema (solo admin)
  - name: Admin - Users
    description: Gestión de usuarios (solo admin)
  - name: Authentication
    description: Autenticación y gestión de sesiones
  - name: Checkout
    description: Checkout and payment processing endpoints
  - name: Cohorts
    description: User cohort management endpoints
  - name: Commissions
    description: Sistema de comisiones
  - name: Cron Jobs
    description: Scheduled task management endpoints
  - name: Health
    description: Endpoints de salud del sistema
  - name: IAM
    description: Gestión de roles y permisos (solo admin)
  - name: OTP
    description: Códigos de verificación OTP
  - name: Packages
    description: Gestión de paquetes de inversión
  - name: Payments
    description: Procesamiento de pagos y compras
  - name: Public
    description: Configuración pública para el frontend
  - name: Special Parent Reports
    description: Special parent reporting endpoints
  - name: User Import
    description: Importación masiva de usuarios (solo admin)
  - name: User Profile
    description: Gestión del perfil de usuario
  - name: Webhooks
    description: Webhooks de servicios externos
  - name: Withdrawals
    description: Solicitudes de retiro
